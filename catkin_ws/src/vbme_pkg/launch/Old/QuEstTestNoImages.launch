<?xml version="1.0"?>
<launch>
	
	<group ns="vbme">
		
		<!-- rosparam command="load" file="$(find my_pkg)/config/my_file.yaml" / -->
		
<!--
		old image publisher for static images
-->
<!--
		<node name="image_publisher1" pkg="image_publisher" type="image_publisher" output="screen" args="/home/codyl/Downloads/2011_09_26_drive_0002_extract/image_00/data/0000000000.png">
			<param name="publish_rate" value="1" />
			<remap from="image_publisher1/image_raw" to="/vbme/FeatPubImages" />
		</node>
		<node name="image_publisher2" pkg="image_publisher" type="image_publisher" output="screen" args="/home/codyl/Downloads/2011_09_26_drive_0002_extract/image_00/data/0000000001.png">
			<param name="publish_rate" value="1" />
			<remap from="image_publisher2/image_raw" to="/vbme/FeatPubImages" />
		</node>
-->
		<param name="LoopSlow" value="False" />
		<!-- If you are drawing images, you should also loop slow -->
		<param name="LoopSleep" value="0.2" />
		<!-- sleep in seconds -->
<!--
		<param name="video_source" value="/home/codyl/Desktop/image_00/" />
-->
<!--
		<param name="video_source" value="/home/developer/Desktop/2011_09_26/2011_09_26_drive_0002_sync/image_00/" />
-->
<!--
		<param name="video_source" value="/home/codyl/Downloads/PptVideos/arrow_l2r/" />
-->
		<!-- Location of the kitti data set for image publisher -->
		<param name="PrintToScreen" value="False" />
		<!-- print more messages to the screen -->
		<param name="DrawImages" value="False" />
		<!-- create display windows -->
		<param name="DetectMethod" value="1" />
		<!-- methods : 1 sift, 2 surf, or 3 orb  -->
		<param name="MatchMethod" value="1" />
		<!-- methods : 1 BFMatcher, 2 -, or 3 FlannBasedMatcher  -->
		
		<param name="MatchesKept" value="8" />
		<!-- number of best matching points to keep -->
		<param name="MatchSeparationCheck" value="False" />
		<!-- Whether to remove matches whose points have low euclidean distance  -->
		<param name="MatchSeparation" value="2.0" />
		<!-- euclidean distance match points must be away from each other -->
		
		<!-- feature point variables for sift  -->
<!--
		<param name="Sift/NFeatures" value="0" />			
-->
		<param name="Sift/NFeatures" value="50" />			
		<param name="Sift/NOctaveLayers" value="3" />
		<param name="Sift/ContrastThreshold" value="0.04" />
		<param name="Sift/NPyramidOctaves" value="10" />
		<param name="Sift/Sigma" value="1.6" />		
		
		<!-- feature point variables for surf -->
		<param name="Surf/HessianThreshold" value="1600" />
		<param name="Surf/NPyramidOctaves" value="3" />
		<param name="Surf/NOctaveLayers" value="4" />
		<param name="Surf/ExtendedDescriptor" value="true)" />
		<param name="Surf/UprightFlag" value="false" />
		
		<!-- feature point variables for orb  https://docs.opencv.org/3.4/db/d95/classcv_1_1ORB.html -->
		<param name="Orb/NFeatures" value="50" />	
		<param name="Orb/ScaleFactor" value="1.2" />
		<param name="Orb/NPyramidLevels" value="8" />
		<param name="Orb/EdgeThreshold" value="31" />	
		<param name="Orb/FirstLevel" value="0" />
		<param name="Orb/WTA_k" value="2" />				
		<param name="Orb/ScoreType" value="1" />		
		<param name="Orb/PatchSize" value="31" />		
		<param name="Orb/FastThreshold" value="20" />
		
		<!-- QuEst variables -->
		<param name="UseRansac" value="True" /> 					<!--  -->
		<param name="NormalizeOutput" value="False" /> 				<!-- Normalize the output translation to a norm of 1 -->
		
		<param name="Ransac/DistanceThreshold" value="0.00001" /> 	<!-- distance threshold between data and model. original 0.000001 -->
		<param name="Ransac/DesiredProbability" value="0.99" /> 	<!-- desired probability of choosing at least one sample free from outliers  -->
		<param name="Ransac/MaxDataTrials" value="100" /> 			<!-- max number to select non-degenerate data set. origianl 100 -->
		<param name="Ransac/MaxIter" value="500" /> = ;  			<!-- max number of iterations. original 1000 -->
		
		<!-- Plot variables -->
		<param name="Plot/Euler" value="1" /> = ;  			<!-- Print quat or euler angles -->
		
<!--
		<node name="KittiPublisher" pkg="vbme_pkg" type="image_publisher.py" output="screen">
			<remap from="/input/image_raw/uncompressed" to="/vbme/FeatPubImages" />
		</node>
-->
		
		<node name="FeaturePublisher" pkg="vbme_pkg" type="feat_descp_pub" output="screen" >
		</node>
		
		<node name="MatchesPub" pkg="vbme_pkg" type="matches_pub" output="screen" >
		</node>
		
		<node name="QuEstPublisher" pkg="vbme_pkg" type="quest_transform_pub" output="screen" >
		</node>
		
		<node name="TransformPlotter" pkg="vbme_pkg" type="transform_plotter.py" output="screen" >
		</node>
		
		
	</group>
</launch>
